plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id("org.sonarqube") version "5.1.0.4882"
}

group = 'kr.pianobear'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation group: 'ognl', name: 'ognl', version: '3.3.4'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.20'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.17.2'

	implementation group: 'io.openvidu', name: 'openvidu-java-client', version: '2.30.0'


	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext {
	springProfilesActive = project.hasProperty('spring.profiles.active') ? project.getProperty('spring.profiles.active') : 'local'
}

test {
	systemProperty 'spring.profiles.active', springProfilesActive
}

bootRun {
	systemProperty 'spring.profiles.active', springProfilesActive
}

sonarqube {
    properties {
        property "sonar.projectName", "S11P12B103"          // 프로젝트 이름
        property "sonar.projectKey", "S11P12B103"      // 프로젝트 키
        property "sonar.host.url", "https://sonarqube.sgr.cspark.kr" // SonarQube 서버 URL
        property "sonar.token", "sqa_fad5bd9a70855fd2e7ff2e5bccf13a85d63c0c21"      // SonarQube 인증 토큰
    }
}